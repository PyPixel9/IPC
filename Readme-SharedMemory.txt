Shared memory does IPC by storing data in the user space however due to this fact it is not synchronized and read and write ordering can therefore get inverted , in order to handle this I have created an external file which manages the order of execution and ensures ordering , the logic used to do this is the same as FIFO ,strings are sent alont with their ID's then the other program program finds the highest ID and sends the highest index, then the other program reads it and now continues the execution from this index this keeps working until 50 strings is complete. 